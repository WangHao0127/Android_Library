apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

def configs = rootProject.ext.android //android配置

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath thirdPartyDependencies.butterknife_gradle_plugin
    }
}

android {
    compileSdkVersion configs.compileSdkVersion
    buildToolsVersion configs.buildToolsVersion

    defaultConfig {
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    //依赖库配置
    def supportDependencies = rootProject.ext.supportDependencies
    def tests = rootProject.ext.tests
    def constraints = rootProject.ext.constraints
    def netDependencies = rootProject.ext.netDependencies
    def thirdPartyDependencies = rootProject.ext.thirdPartyDependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //添加了annotationProcessor,否则编译不过
    annotationProcessor thirdPartyDependencies.butterknife_compiler

    api supportDependencies.v4
    api supportDependencies.cardView
    api supportDependencies.recyclerView
    api supportDependencies.BaseRecyclerViewAdapterHelper

    api tests.junit
    api constraints.layout

    api netDependencies.retrofit  // 针对Android和Java类型安全的http客户端
    api netDependencies.retrofit_adapter_rxjava  // 使Retrofit支持RxJava
    api netDependencies.okhttp3_logging_interceptor  // 网络请求组件日志输出
    api netDependencies.retrofit_converter_gson
    api netDependencies.rx_java  // 响应式编程框架
    api netDependencies.rx_android
    api netDependencies.okhttp3

    api thirdPartyDependencies.orhanobut_logger
    api thirdPartyDependencies.multidex
    api thirdPartyDependencies.butterknife
    api thirdPartyDependencies.butterknife_compiler
    api thirdPartyDependencies.eventbus
    api thirdPartyDependencies.immersionbar

    api thirdPartyDependencies.utilcode
}
